name: Deploy to AWS

on:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/aws_key.pem
          chmod 400 ~/.ssh/aws_key.pem
          ssh-keyscan -H ${{ secrets.IP_REMOTE }} >> ~/.ssh/known_hosts
        env:
          IP_REMOTE: ${{ secrets.IP_REMOTE }}

      - name: Deploy over SSH
        run: |
          ssh -i ~/.ssh/aws_key.pem ubuntu@${{ secrets.IP_REMOTE }} << 'EOF'
            cd /home/ubuntu/apps/task_challenger
            git pull origin master
            
            # Create .env file with secrets
            cat > .env << 'ENVEOF'
          NODE_ENV=${{ secrets.NODE_ENV }}
          APP_PORT=${{ secrets.APP_PORT }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          DATABASE_TYPE=${{ secrets.DATABASE_TYPE }}
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          DATABASE_MAX_POOL_SIZE=${{ secrets.DATABASE_MAX_POOL_SIZE }}
          DATABASE_LOGGING=${{ secrets.DATABASE_LOGGING }}
          ENVEOF
            
            docker ps -a -q --filter ancestor=backend_reto | head -n 10 | xargs docker rm -f || true
            docker build -t backend_reto .
            docker images -f "dangling=true" -q | xargs -r docker rmi
            docker run -dit -p 3000:3000 backend_reto
          EOF
